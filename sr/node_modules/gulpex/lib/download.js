'use strict';

var assert = require('assert'),
    gulp = require('gulp'),
    download = require('gulp-download'),
    path = require('path'),
    unzip = require('gulp-unzip'),
    fs = require('fs');

function downloadFile(options) {
    assert.equal(typeof options, 'object');

    var url = options.url,
        fileName = options.fileName,
        targetPath = options.targetPath;

    assert.equal(typeof url, 'string');
    assert.equal(typeof fileName, 'string');
    assert.equal(typeof targetPath, 'string');

    var checkPath = path.join(targetPath, fileName);

    return function vendorDownload() {
        if (fs.existsSync(checkPath)) {
            console.log(checkPath, 'exists; not fetching', url);
            return false;
        } else {
            console.log(checkPath, 'absent; fetching', url);
        }

        return download(url)
            .pipe(gulp.dest(targetPath));
    };
}

function downloadAndUnzipFile(options) {
    assert.equal(typeof options, 'object');

    var url = options.url,
        targetPath = options.targetPath,
        checkPath = options.checkPath || options.targetPath;

    assert.equal(typeof url, 'string');
    assert.equal(typeof targetPath, 'string');
    assert.equal(typeof checkPath, 'string');

    return function vendorDownloadAndUnzip() {
        if (fs.existsSync(checkPath)) {
            console.log(checkPath, 'exists; not fetching', url);
            return false;
        } else {
            console.log(checkPath, 'absent; fetching and extracting', url);
        }

        return download(url)
            .pipe(unzip())
            .pipe(gulp.dest(targetPath));
    };
}

module.exports.file = downloadFile;
module.exports.zipFile = downloadAndUnzipFile;
