'use strict';

var ANNOUNCE_AFTER = 5000,
    ANNOUNCE_EVERY = 5000;

function announceWaiting(gulp, gutil) {
    var tasks = {},
        announceTimeout,
        announceInterval;

    function announce() {
        for (var task in tasks) {
            var span = process.hrtime(tasks[task]),
                secs = span[0] + span[1]/1e9;

            gutil.log(
                'Still waiting for',
                '\'' + gutil.colors.cyan(task) + '\'',
                'after',
                gutil.colors.magenta(secs.toPrecision(3) + ' s'));
        }
    }

    function startAnnouncing() {
        announceInterval = setInterval(announce, ANNOUNCE_EVERY);
        announceInterval.unref();
        announce();
    }

    function taskStarted (info) {
        tasks[info.task] = process.hrtime();
    }

    function taskStopped (info) {
        delete tasks[info.task];
    }

    gulp.on('task_start', taskStarted);
    gulp.on('task_stop', taskStopped);
    gulp.on('task_err', taskStopped);

    announceTimeout = setTimeout(startAnnouncing, ANNOUNCE_AFTER);
    announceTimeout.unref();
}

module.exports = announceWaiting;
