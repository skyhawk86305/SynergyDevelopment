{
  "name": "jsxhint",
  "version": "0.9.0",
  "description": "Wrapper for JSHint to allow hinting of JSX files",
  "main": "jsxhint.js",
  "bin": {
    "jsxhint": "./cli.js"
  },
  "engine": "node >= 0.10",
  "scripts": {
    "test": "node ./node_modules/tap/bin/tap test/test.js",
    "lint": "jshint"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/STRML/JSXHint"
  },
  "directories": {
    "test": "test"
  },
  "prefer_global": true,
  "keywords": [
    "jshint",
    "jsx",
    "react",
    "lint",
    "jslint",
    "reactjs"
  ],
  "author": {
    "name": "Samuel Reed"
  },
  "contributors": [
    {
      "name": "Casey Foster",
      "email": "c@sey.me"
    }
  ],
  "license": "MIT",
  "dependencies": {
    "async": "~0.9.0",
    "debug": "~2.1.0",
    "extend": "^2.0.0",
    "graceful-fs": "~3.0.5",
    "jshint": "~2.5.10",
    "jstransform": "~8.2.0",
    "mkdirp": "~0.5.0",
    "react-tools": "^0.12.1",
    "rimraf": "~2.2.8",
    "through": "~2.3.6"
  },
  "devDependencies": {
    "6to5": "^1.14.6",
    "tap": "~0.4.13",
    "precommit-hook": "~1.0.7"
  },
  "publishConfig": {
    "registry": "https://registry.npmjs.org"
  },
  "readme": "[![build status](https://secure.travis-ci.org/STRML/JSXHint.png)](http://travis-ci.org/STRML/JSXHint)\n\n#JSXHint\nA wrapper around JSHint to allow linting of files containing JSX syntax.\n\nAccepts the same input and JSHint and emits the same output. Switches sent to jsxhint\nare forwarded on to jshint.\n\nGlob parsing, ignores, and jshintrc parsing are all performed by jshint.\n\nAutomatically lints all files with the `.js` and `.jsx` extensions.\n\n##Rationale\n\nThis module is intended for use as part of\n[SublimeLinter-jsxhint](https://github.com/SublimeLinter/SublimeLinter-jsxhint),\nbut it can be used separately as a smart replacement for JSHint. It will automatically convert any file with\nthe `jsx` extension into JS using `react-tools`, then present the file to JSHint for validation.\n\nNote that as of React 0.12, [it is recommended](https://github.com/facebook/react/issues/832) to use the `.jsx`\nfile extension rather than the pragma in `.js` files. If you are already using the `.jsx` extension, add the option\n`--jsx-only`. This will skip attempted conversion of `.js` files to JSX, but still lint those files.\nThis is useful for running an entire project.\n\n`JSXHint` is safe to use as a drop-in replacement for `JSHint`, even when JSX files are not present in a project.\n\n`JSXHint` offers a simple workflow that accepts JSX files without modification.\nAdditionally, `JSXHint` actually lints the object definitions generated by the JSX compiler, allowing you to catch\nmistakes in your templates (such as undefined variables, syntax errors, and missing modules).\n\n##Examples\n\n```\n# Lint entire project\njsxhint src/**/*\n\n# Lint Project using only `.jsx` extension for JSX.\n# Will lint .js files with jshint, .jsx files with jsxhint.\njsxhint --jsx-only src/**/*\n\n# Basic globbing\njsxhint -c ./other-directory/.jshintrc src/foo/*.jsx\n\n# Accepts stdin with '-'\njsxhint - < src/file.jsx\n\n# Exclude files\njsxhint --exclude excludeme.jsx src/foo/*.jsx\n\n# Lint project using 6to5 acorn parser\n# Note that you must explicitly install `6to5` if you wish to use it.\njsxhint --6to5 src/**/*\n```\n\n##Installation\n`npm install -g jsxhint`\n\n##Usage\n\n```\nUsage:\n  jsxhint [OPTIONS] [ARGS]\n\nOptions:\n  -c, --config STRING    Custom configuration file\n      --reporter STRING  Custom reporter (<PATH>|jslint|checkstyle)\n      --exclude STRING   Exclude files matching the given filename pattern\n                         (same as .jsxhintignore)\n      --exclude-path STRINGPass in a custom jsxhintignore file path\n      --filename STRING  Pass in a filename when using STDIN to emulate config\n                         lookup for that file name\n      --verbose          Show message codes\n      --show-non-errors  Show additional data generated by jsxhint\n  -e, --extra-ext STRING Comma-separated list of file extensions to use\n                         (default is .js)\n      --extract [STRING] Extract inline scripts contained in HTML\n                         (auto|always|never, default to never)  (Default is never)\n      --jslint-reporter  Use a jslint compatible reporter (DEPRECATED, use\n                         --reporter=jslint instead)\n      --checkstyle-reporter Use a CheckStyle compatible XML reporter\n                            (DEPRECATED, use --reporter=checkstyle\n                            instead)\n  -v, --version          Display the current version\n  -h, --help             Display help and usage details\n      --jsx-only         Only transform files with the .jsx extension.\n                         Will run somewhat faster.\n      --6to5             Use 6to5 (acorn parser) instead of react esprima.\n                         Useful if you are using es6-module, etc. You must\n                         install the module `6to5` manually with npm.\n      --7to5             Use 6to5 with experimental support for ES7.\n                         Useful if you are using es7-async, etc.\n      --harmony          Use react esprima with ES6 transformation support.\n                         Useful if you are using both es6-class and react.\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/STRML/JSXHint/issues"
  },
  "homepage": "https://github.com/STRML/JSXHint",
  "_id": "jsxhint@0.9.0",
  "_from": "jsxhint@^0.9.0"
}
